{"version":3,"file":"index.cjs","sources":["../src/index.ts"],"sourcesContent":["import { setImmediate as flushMicroTasks } from \"timers\";\n\nimport { JsPsych } from \"jspsych\";\n\n/**\n * https://github.com/facebook/jest/issues/2157#issuecomment-279171856\n */\nexport function flushPromises() {\n  return new Promise((resolve) => flushMicroTasks(resolve));\n}\n\nexport function dispatchEvent(event: Event, target: Element = document.body) {\n  target.dispatchEvent(event);\n  return flushPromises();\n}\n\nexport async function keyDown(key: string) {\n  await dispatchEvent(new KeyboardEvent(\"keydown\", { key }));\n}\n\nexport async function keyUp(key: string) {\n  await dispatchEvent(new KeyboardEvent(\"keyup\", { key }));\n}\n\nexport async function pressKey(key: string) {\n  await keyDown(key);\n  await keyUp(key);\n}\n\nexport async function mouseDownMouseUpTarget(target: Element) {\n  await dispatchEvent(new MouseEvent(\"mousedown\", { bubbles: true }), target);\n  await dispatchEvent(new MouseEvent(\"mouseup\", { bubbles: true }), target);\n}\n\nexport async function clickTarget(target: Element) {\n  // Check if the target is a form element and if it's disabled\n  if (target instanceof HTMLButtonElement || target instanceof HTMLInputElement) {\n    if (target.disabled) {\n      console.log(\"Target is disabled, not dispatching click event.\");\n      return; // Exit the function if the target is disabled\n    }\n  }\n  await dispatchEvent(new MouseEvent(\"click\", { bubbles: true }), target);\n}\n\n/**\n * Dispatch a `MouseEvent` of type `eventType`, with x and y defined relative to the container element.\n * @param x The x location of the event, relative to the x location of `container`.\n * @param y The y location of the event, relative to the y location of `container`.\n * @param container The DOM element for relative location of the event.\n */\nasync function dispatchMouseEvent(eventType: string, x: number, y: number, container: Element) {\n  const containerRect = container.getBoundingClientRect();\n  await dispatchEvent(\n    new MouseEvent(eventType, {\n      clientX: containerRect.x + x,\n      clientY: containerRect.y + y,\n      bubbles: true,\n    }),\n    container\n  );\n}\n\n/**\n * Dispatch a `mousemove` event, with x and y defined relative to the container element.\n * @param x The x location of the event, relative to the x location of `container`.\n * @param y The y location of the event, relative to the y location of `container`.\n * @param container The DOM element for relative location of the event.\n */\nexport async function mouseMove(x: number, y: number, container: Element) {\n  await dispatchMouseEvent(\"mousemove\", x, y, container);\n}\n\n/**\n * Dispatch a `mouseup` event, with x and y defined relative to the container element.\n * @param x The x location of the event, relative to the x location of `container`.\n * @param y The y location of the event, relative to the y location of `container`.\n * @param container The DOM element for relative location of the event.\n */\nexport async function mouseUp(x: number, y: number, container: Element) {\n  await dispatchMouseEvent(\"mouseup\", x, y, container);\n}\n\n/**\n * Dispatch a `mousemove` event, with x and y defined relative to the container element.\n * @param x The x location of the event, relative to the x location of `container`.\n * @param y The y location of the event, relative to the y location of `container`.\n * @param container The DOM element for relative location of the event.\n */\nexport async function mouseDown(x: number, y: number, container: Element) {\n  await dispatchMouseEvent(\"mousedown\", x, y, container);\n}\n\n/**\n * Runs the given timeline by calling `jsPsych.run()` on the provided JsPsych object.\n *\n * @param timeline The timeline that is passed to `jsPsych.run()`\n * @param jsPsych The jsPsych instance to be used. If left empty, a new instance will be created. If\n * a settings object is passed instead, the settings will be used to create the jsPsych instance.\n *\n * @returns An object containing test helper functions, the jsPsych instance, and the jsPsych\n * display element\n */\nexport async function startTimeline(timeline: any[], jsPsych: JsPsych | any = {}) {\n  const jsPsychInstance = jsPsych instanceof JsPsych ? jsPsych : new JsPsych(jsPsych);\n\n  let hasFinished = false;\n  const finished = jsPsychInstance.run(timeline).then(() => {\n    hasFinished = true;\n  });\n  await flushPromises();\n\n  const displayElement = jsPsychInstance.getDisplayElement();\n\n  return {\n    jsPsych: jsPsychInstance,\n    displayElement,\n    /** Shorthand for `jsPsych.getDisplayElement().innerHTML` */\n    getHTML: () => displayElement.innerHTML,\n    /** Shorthand for `jsPsych.data.get()` */\n    getData: () => jsPsychInstance.data.get(),\n    expectFinished: async () => {\n      await flushPromises();\n      expect(hasFinished).toBe(true);\n    },\n    expectRunning: async () => {\n      await flushPromises();\n      expect(hasFinished).toBe(false);\n    },\n    /** A promise that is resolved when `jsPsych.run()` is done. */\n    finished,\n  };\n}\n\n/**\n * Runs the given timeline by calling `jsPsych.simulate()` on the provided JsPsych object.\n *\n * @param timeline The timeline that is passed to `jsPsych.run()`\n * @param simulation_mode Either 'data-only' mode or 'visual' mode.\n * @param simulation_options Options to pass to `jsPsych.simulate()`\n * @param jsPsych The jsPsych instance to be used. If left empty, a new instance will be created. If\n * a settings object is passed instead, the settings will be used to create the jsPsych instance.\n *\n * @returns An object containing test helper functions, the jsPsych instance, and the jsPsych\n * display element\n */\nexport async function simulateTimeline(\n  timeline: any[],\n  simulation_mode?: \"data-only\" | \"visual\",\n  simulation_options: any = {},\n  jsPsych: JsPsych | any = {}\n) {\n  const jsPsychInstance = jsPsych instanceof JsPsych ? jsPsych : new JsPsych(jsPsych);\n\n  let hasFinished = false;\n  const finished = jsPsychInstance\n    .simulate(timeline, simulation_mode, simulation_options)\n    .then(() => {\n      hasFinished = true;\n    });\n  await flushPromises();\n\n  const displayElement = jsPsychInstance.getDisplayElement();\n\n  return {\n    jsPsych: jsPsychInstance,\n    displayElement,\n    /** Shorthand for `jsPsych.getDisplayElement().innerHTML` */\n    getHTML: () => displayElement.innerHTML,\n    /** Shorthand for `jsPsych.data.get()` */\n    getData: () => jsPsychInstance.data.get(),\n    expectFinished: async () => {\n      await flushPromises();\n      expect(hasFinished).toBe(true);\n    },\n    expectRunning: async () => {\n      await flushPromises();\n      expect(hasFinished).toBe(false);\n    },\n    /** A promise that is resolved when `jsPsych.simulate()` is done. */\n    finished,\n  };\n}\n"],"names":["flushMicroTasks","JsPsych"],"mappings":"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"}