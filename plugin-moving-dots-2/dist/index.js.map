{"version":3,"file":"index.js","sources":["../package.json","../src/index.ts"],"sourcesContent":["{\n  \"name\": \"plugin-moving-dots-2\",\n  \"version\": \"0.0.1\",\n  \"description\": \"moving dots but better\",\n  \"type\": \"module\",\n  \"main\": \"dist/index.cjs\",\n  \"exports\": {\n    \"import\": \"./dist/index.js\",\n    \"require\": \"./dist/index.cjs\"\n  },\n  \"typings\": \"dist/index.d.ts\",\n  \"unpkg\": \"dist/index.browser.min.js\",\n  \"files\": [\n    \"src\",\n    \"dist\"\n  ],\n  \"source\": \"src/index.ts\",\n  \"scripts\": {\n    \"test\": \"jest\",\n    \"test:watch\": \"npm test -- --watch\",\n    \"tsc\": \"tsc\",\n    \"build\": \"rollup --config\",\n    \"build:watch\": \"npm run build -- --watch\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"\",\n    \"directory\": \"./\"\n  },\n  \"keywords\": [\n    \"jsPsych\"\n  ],\n  \"author\": {\n    \"name\": \"ollie & noah\",\n    \"url\": \"\"\n  },\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"/issues\"\n  },\n  \"homepage\": \"/plugin-moving-dots-2/README.md\",\n  \"dependencies\": {\n    \"jspsych\": \"^8.0.0\",\n    \"@citation-js/core\": \"^0.7.14\",\n    \"@citation-js/plugin-software-formats\": \"^0.6.1\",\n    \"@citation-js/plugin-bibtex\": \"^0.7.14\",\n    \"@citation-js/plugin-cff\": \"^0.6.1\"\n  },\n  \"devDependencies\": {\n    \"@jspsych/config\": \"^3.2.2\",\n    \"@jspsych/test-utils\": \"^1.0.0\"\n  }\n}\n","// !!!TO DO: modify timing of trial to be 5 seconds for purposes of playback file collection. fix bugs\n\nimport { JsPsych, JsPsychPlugin, ParameterType, TrialType } from \"jspsych\";\n\nimport { version } from \"../package.json\";\n\nconst info = <const>{\n  name: \"plugin-moving-dots-2\",\n  version: version,\n  parameters: {\n    /** Maximum initial distance from the center location for dots */\n    max_initial_distance: {\n      type: ParameterType.INT,\n      default: 45,\n    },\n    /** Duration of the flash in milliseconds */\n    flash_duration: {\n      type: ParameterType.INT,\n      default: 200,\n    },\n    /** Delay before the dot flashes in milliseconds */\n    pre_flash_duration: {\n      type: ParameterType.INT,\n      default: 2500,\n    },\n    /** Duration of the post-flash in milliseconds */\n    post_flash_duration: {\n      type: ParameterType.INT,\n      default: 1500,\n    },\n    /** Initial level of control the mouse has over the dots (0-100) */\n    initial_control_level: {\n      type: ParameterType.INT,\n      default: 100,\n    },\n    /** Change in the level of control of the flashing dot after it changes (0-100) */\n    control_change_level: {\n      type: ParameterType.INT,\n      default: 30,\n    },\n    diode_heights: {\n      type: ParameterType.INT,\n      array: true,\n      default: [10, 70, 130, 190]\n    },\n    /** 2-dimensional array of mouse data for playback */\n    playback: {\n      type: ParameterType.COMPLEX,\n      array: true,\n      default: [] as Array<{ dx: number; dy: number; t: number }>,\n      params: {\n        dx: {\n          type: ParameterType.INT,\n        },\n        dy: {\n          type: ParameterType.INT,\n        },\n        t: {\n          type: ParameterType.INT,\n        },\n      },\n    },\n  },\n  data: {\n    /** Magnitude of the control change (e.g., 30, 70, 100) */\n    control_change: {\n      type: ParameterType.INT,\n    },\n  },\n  // When you run build on your plugin, citations will be generated here based on the information in the CITATION.cff file.\n  citations: \"__CITATIONS__\",\n};\n\ntype Info = typeof info;\n\n/**\n * **plugin-moving-dots-2**\n *\n * Handles moving series of dots that move at the same speed in response to user input; one dot will flash red and change its control level. Implemented as part of an experiment for COGS-219; replicating the paper \"Control Changes the Way We Look at the World\" by Wen & Haggard.\n *\n * @author Ollie & Noah\n * @see {@link /plugin-moving-dots-2/README.md}\n */\nclass MovingDots2Plugin implements JsPsychPlugin<Info> {\n  static info = info;\n\n  constructor(private jsPsych: JsPsych) {}\n\n  trial(display_element: HTMLElement, trial: TrialType<Info>) {\n    // Create a canvas to display the dots\n    const canvas = document.createElement(\"canvas\");\n\n    // Change canvas size to window size\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n\n    display_element.appendChild(canvas);\n    const ctx = canvas.getContext(\"2d\");\n\n    // Initialize dot positions and control levels\n    const dots: { x: number; y: number; control: number }[] = [];\n\n    // Flash one dot and change its control level after a random delay\n    const flashIndex = 0;\n    const controlChange = trial.control_change_level;\n\n    let flashStartTime: number | null = null;\n    let hasFlashed = false;\n    let isFlashing = false;\n\n    const data = [];\n    let frame = 0;\n\n    let startTime = Date.now();\n    let lastFrameTime = startTime;\n\n    // Handle mouse/touchpad input\n    let dx = 0;\n    let dy = 0;\n\n    let isFirstMove = true;\n\n    const initializeDots = () => {\n      for (let i = 0; i < 10; i++) {\n        const angle = Math.random() * 2 * Math.PI;\n        const distance = Math.random() * trial.max_initial_distance;\n        dots.push({\n          x: canvas.width / 2 + distance * Math.cos(angle),\n          y: canvas.height / 2 + distance * Math.sin(angle),\n          control: trial.initial_control_level, // Initial control level\n        });\n      }\n    };\n\n    // Render dots, cross, and control value\n    const renderDotsAndCross = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      // Render cross at the center\n      ctx.beginPath();\n      ctx.moveTo(canvas.width / 2 - 10, canvas.height / 2);\n      ctx.lineTo(canvas.width / 2 + 10, canvas.height / 2);\n      ctx.moveTo(canvas.width / 2, canvas.height / 2 - 10);\n      ctx.lineTo(canvas.width / 2, canvas.height / 2 + 10);\n      ctx.strokeStyle = \"black\";\n      ctx.lineWidth = 2;\n      ctx.stroke();\n\n      // Render dots\n      dots.forEach((dot, index) => {\n        ctx.beginPath();\n        ctx.arc(dot.x, dot.y, 3.5, 0, 2 * Math.PI);\n        if (isFlashing) {\n          ctx.fillStyle = index === flashIndex ? \"red\" : \"black\";\n        } else {\n          ctx.fillStyle = \"black\";\n        }\n        ctx.fill();\n      });\n    };\n\n    const mouseMoveListener = (e: MouseEvent) => {\n      dx = e.movementX;\n      dy = e.movementY;\n    };\n\n    // Function to calculate new dx and dy\n    const doTheMath = (\n      inputDX: number,\n      inputDY: number,\n      playbackDX: number,\n      playbackDY: number,\n      control: number\n    ) => {\n\n      const epsilon = 0.00001; // a small constant to prevent division by zero\n\n      // get magnitude of mouse vector\n      const mySpeed = Math.sqrt(Math.pow(inputDX, 2) + Math.pow(inputDY, 2)) + epsilon;\n      \n      // get unit vector of mouse vector\n      const unitVector = { x: inputDX / mySpeed, y: inputDY / mySpeed };\n\n      // get magnitude of playback vector\n      const playbackSpeed = Math.sqrt(\n        Math.pow(playbackDX, 2) + Math.pow(playbackDY, 2)\n      ) + epsilon;\n\n      // get unit vector of playback vector\n      const playbackUnitVector = {\n        x: playbackDX / playbackSpeed,\n        y: playbackDY / playbackSpeed,\n      };\n\n      // blend the two vectors based on control\n      // if control is 1 (100%), use only the mouse vector\n      // if control is 0, use only the playback vector\n\n      const newDX = (control * unitVector.x + (1 - control) * playbackUnitVector.x) * mySpeed;\n      const newDY = (control * unitVector.y + (1 - control) * playbackUnitVector.y) * mySpeed;\n      \n      return { newDX, newDY };\n    };\n\n    // Update dot positions based on control\n    const updateDots = (vx: number, vy: number) => {\n      dots.forEach((dot) => {\n        const { newDX, newDY } = doTheMath(\n          vx,\n          vy,\n          trial.playback[frame].dx,\n          trial.playback[frame].dy,\n          dot.control / 100\n        );\n        dot.x += newDX;\n        dot.y += newDY;\n      });\n    };\n\n    // End trial\n    const endTrial = () => {\n      document.exitPointerLock();\n      canvas.removeEventListener(\"mousemove\", mouseMoveListener);\n      display_element.innerHTML = \"\"; // Clear the canvas\n      this.jsPsych.finishTrial({\n        control_change: controlChange,\n        mouse_data: data,\n      });\n    };\n\n    /**\n     * Renders side boxes and updates their colors based on control and change parameters.\n     * @param initialControl - The initial control level (0 or 1).\n     * @param controlChange - The control change level (0, 30, or 70).\n     * @param isFlashing - Whether the dot is currently flashing.\n     * @param diodeHeights - Array of heights for the boxes.\n     */\n    function renderSideBoxes(initialControl: number, controlChange: number, isFlashing: boolean, diodeHeights: number[]) {\n      const box1 = document.createElement(\"div\");\n      const box2 = document.createElement(\"div\");\n      const box3 = document.createElement(\"div\");\n      const box4 = document.createElement(\"div\");\n\n      const label1 = document.createElement(\"div\");\n      const label2 = document.createElement(\"div\");\n      const label3 = document.createElement(\"div\");\n      const label4 = document.createElement(\"div\");\n\n      box1.style.position = \"fixed\";\n      box1.style.bottom = `${diodeHeights[0]}px`;\n      box1.style.right = \"10px\";\n      box1.style.height = \"5vh\";\n      box1.style.width = \"5vh\";\n      box1.style.backgroundColor = \"black\";\n\n      box2.style.position = \"fixed\";\n      box2.style.bottom = `${diodeHeights[1]}px`;\n      box2.style.right = \"10px\";\n      box2.style.height = \"5vh\";\n      box2.style.width = \"5vh\";\n      box2.style.backgroundColor = \"black\";\n\n      box3.style.position = \"fixed\";\n      box3.style.bottom = `${diodeHeights[2]}px`;\n      box3.style.right = \"10px\";\n      box3.style.height = \"5vh\";\n      box3.style.width = \"5vh\";\n      box3.style.backgroundColor = \"black\";\n\n      box4.style.position = \"fixed\";\n      box4.style.bottom = `${diodeHeights[3]}px`;\n      box4.style.right = \"10px\";\n      box4.style.height = \"5vh\";\n      box4.style.width = \"5vh\";\n      box4.style.backgroundColor = isFlashing ? \"white\" : \"black\";\n\n      if (isFlashing) {\n        box1.style.backgroundColor = initialControl === 100 ? \"white\" : \"black\";\n        box2.style.backgroundColor = controlChange === 30 ? \"white\" : \"black\";\n        box3.style.backgroundColor = controlChange === 70 ? \"white\" : \"black\";\n      }\n\n      label1.style.position = \"fixed\";\n      label1.style.bottom = `${diodeHeights[0] + 35}px`;\n      label1.style.right = \"10px\";\n      label1.style.fontSize = \"12px\";\n      label1.innerText = \"initial\";\n\n      label2.style.position = \"fixed\";\n      label2.style.bottom = `${diodeHeights[1] + 35}px`;\n      label2.style.right = \"10px\";\n      label2.style.fontSize = \"12px\";\n      label2.innerText = \"change1\";\n\n      label3.style.position = \"fixed\";\n      label3.style.bottom = `${diodeHeights[2] + 35}px`;\n      label3.style.right = \"10px\";\n      label3.style.fontSize = \"12px\";\n      label3.innerText = \"change2\";\n\n      label4.style.position = \"fixed\";\n      label4.style.bottom = `${diodeHeights[3] + 35}px`;\n      label4.style.right = \"10px\";\n      label4.style.fontSize = \"12px\";\n      label4.innerText = \"flash\";\n\n      document.body.appendChild(box1);\n      document.body.appendChild(box2);\n      document.body.appendChild(box3);\n      document.body.appendChild(box4);\n\n      document.body.appendChild(label1);\n      document.body.appendChild(label2);\n      document.body.appendChild(label3);\n      document.body.appendChild(label4);\n    }\n\n    const animate = () => {\n      const currentTime = Date.now();\n      const elapsedTime = currentTime - startTime;\n\n      lastFrameTime = currentTime;\n\n      // working backwards from the end of the trial\n      \n      // check if the trial is over\n      if(elapsedTime >= trial.pre_flash_duration + trial.post_flash_duration) {\n        endTrial();\n        return;\n      }\n\n      // check if we are switching to the post-flash period\n      if (isFlashing && currentTime - flashStartTime >= trial.flash_duration) {\n        isFlashing = false;\n        hasFlashed = true;\n      }\n\n      // check if it is time to flash\n      if (elapsedTime >= trial.pre_flash_duration && !isFlashing && !hasFlashed) {\n        flashStartTime = Date.now();\n        isFlashing = true;\n        if (trial.initial_control_level === 100) {\n          dots[flashIndex].control = dots[flashIndex].control - controlChange;\n        } else if (trial.initial_control_level === 0) {\n          dots[flashIndex].control = dots[flashIndex].control + controlChange;\n        }\n      }\n\n      // Render side boxes\n      renderSideBoxes(trial.initial_control_level, trial.control_change_level, isFlashing, trial.diode_heights);\n\n      // run the next loop of the animation\n      updateDots(dx, dy);\n      renderDotsAndCross();\n      data.push({ dx, dy });\n      dx = 0;\n      dy = 0;\n      frame++;\n      requestAnimationFrame(animate);\n    };\n\n    initializeDots();\n    renderDotsAndCross();\n    canvas.requestPointerLock({ unadjustedMovement: false });\n    canvas.addEventListener(\"mousemove\", mouseMoveListener);\n    animate();\n  }\n}\n\nexport default MovingDots2Plugin;\n"],"names":["controlChange","isFlashing"],"mappings":"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"}